services:
  # api:
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile
  #   container_name: claim_prediction_api
  #   ports:
  #     - "8000:8000"
  #   restart: always
  #   volumes:
  #     - ./api/processed_data:/app/processed_data  # Persist .pkl files
  #     - ./api/logs:/app/logs  # Persist logs

  airflow-init:
    build:
      context: ./airflow-docker
      dockerfile: Dockerfile
    container_name: airflow_init
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
    entrypoint: >
      bash -c "
      airflow db upgrade &&
      (airflow users list | grep -q 'admin' || airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com)"

  postgres:
    image: postgres:13
    container_name: airflow_postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: airflow_redis
    restart: always

  airflow-webserver:
    build:
      context: ./airflow-docker
      dockerfile: Dockerfile
    container_name: airflow_webserver
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
    ports:
      - "8080:8080"
    volumes:
      - ./airflow-docker/dags:/opt/airflow/dags
      - ./airflow-docker/logs:/opt/airflow/logs
      - ./airflow-docker/plugins:/opt/airflow/plugins
    command: airflow webserver

  airflow-scheduler:
    build:
      context: ./airflow-docker
      dockerfile: Dockerfile
    container_name: airflow_scheduler
    restart: always
    depends_on:
      - postgres
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./airflow-docker/dags:/opt/airflow/dags
      - ./airflow-docker/logs:/opt/airflow/logs
      - ./airflow-docker/plugins:/opt/airflow/plugins
    command: airflow scheduler

  airflow-worker:
    build:
      context: ./airflow-docker
      dockerfile: Dockerfile
    container_name: airflow_worker
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
    volumes:
      - ./airflow-docker/dags:/opt/airflow/dags
      - ./airflow-docker/logs:/opt/airflow/logs
      - ./airflow-docker/plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data  # âœ… Required for ingestion & training
      - ./api:/app/api
    command: airflow celery worker

volumes:
  postgres_data:
    driver: local
